# This rakefile:
# -compiles coffee scripts
# -compiles templates as specified in wtf.js
# -compiles stylus styles
# -eventually cleans up web to be a dist only thinger
# html page compiler....
# so test pages don't have to copy-paste header code...

# TODO: going to want to compile to a dist dir or something...
# So need generational targets that only generate if there are changes...

# TODO: Update targets to only generate out of date files
	

require 'rake'

myDir = Dir.pwd

# Template Pre-compile plan:
# -Descend into plugins/ui/some_plugin/templates
# 	for every plugin
# -compile all templates found there
# -place them into Templates.js as:
# 	return {
# 		template1FileName: Handlebars.template(PRE-COMPILED-TEMPLATE),
# 		template2FileName: ...
# 	}
# -place Templates.js into the plugin's
# 	scripts directory.
task :compileTpls, :pretty do |t, args|
		pretty = args[:pretty]

		FileList["#{myDir}/web/scripts/ui/**/res/templates"].each do |dirname|
			compiledTemplates = "define(function() {\n"

			first = true
			FileList["#{dirname}/*.dust"].each do |fname|
				templateName = File.basename(fname, ".dust")
				component = fname.scan(/ui\/([^\/]+)\/res/).last.first
				pipe = IO.popen("dust #{fname} #{component}.#{templateName}")
				result = pipe.readlines
				pipe.close

				joined = result.join
				if not pretty
					joined = joined.gsub(/\\r\\n|\n|\\n/, "");
				end
				puts fname
				
				compiledTemplates += "\n#{joined}"
			end
			puts "#{dirname}/../../Templates.js"
  			File.open("#{dirname}/../../Templates.js", 'w') {|f|
  				f.write(compiledTemplates)
  				f.write("\n});")
  				f.write("\n");
  			}
  		end
end

task :compileStylus do
end

task :compileDocs do
	FileList["./**/*.js"].each do |filename|
		puts filename
		pipe = IO.popen("docco #{filename}")
		result = pipe.readlines
		pipe.close

		puts result
	end
end

task :compileCoffee, :watch do |t,args|
	watch = ""
	if args[:watch]
		watch = "--watch"
	end

	system %{coffee #{watch} --bare --compile --output web/scripts src/coffee/}
end

# TODO: need to specify dependencies
# and also need to not run if no changes
task :dist do
	system %{rsync -r --exclude='.git' --exclude='webgl*' web/ dist/}
	myDir = Dir.pwd
	FileList["web/**/*.js"].each do |filename|
		destFilename = filename[3..filename.length]
		system %{java -jar /Users/mattcrinklaw/opt/closure-compiler/compiler.jar --js=#{myDir}/#{filename} --js_output_file=#{myDir}/dist/#{destFilename}}
		puts "#{myDir}/dist/#{destFilename}"
	end
end
